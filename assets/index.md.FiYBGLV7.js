import{_ as i,c as a,a0 as e,o as n}from"./chunks/framework.p2VkXzrt.js";const t="/assets/template.twig.C_OXf5Au.png",g=JSON.parse('{"title":"Conventions Plugin for Craftcms","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),l={name:"index.md"};function o(p,s,h,r,d,k){return n(),a("div",null,s[0]||(s[0]=[e('<h1 id="conventions-plugin-for-craftcms" tabindex="-1">Conventions Plugin for Craftcms <a class="header-anchor" href="#conventions-plugin-for-craftcms" aria-label="Permalink to &quot;Conventions Plugin for Craftcms&quot;">​</a></h1><p><img src="'+t+`" alt="Template example"></p><p><strong>At <a href="https://zaengle.com" target="_blank" rel="noreferrer">Zaengle</a> we know from experience that strong conventions make projects more consistent, and consistent projects are easier to work with</strong>.</p><p>Craft doesn&#39;t impose any particular structure on how you organize your templates. In some ways that freedom is great, but on larger sites things can quickly get out of hand without some organizing principles and the tools to enforce them.</p><p>Conventions aims to solve just that problem with easy, readable, opinionated replacements for <code>include</code> that work for approximately ~97.32% of real world use cases. Using Conventions allows you to write more expressive template code that is easier to reason about, and easier to reuse.</p><h2 id="the-trouble-with-include" tabindex="-1">The trouble with <code>{% include %}</code> <a class="header-anchor" href="#the-trouble-with-include" aria-label="Permalink to &quot;The trouble with \`{% include %}\`&quot;">​</a></h2><p><code>{% include %}</code> is probably the most frequently used Twig tag in Craft site builds, but it comes with some considerable drawbacks:</p><ol><li>If not used carefully, it can make it hard to reason about scope</li><li>When used with common best practice (<code>only</code> / <code>ignore missing</code>) it is verbose, which makes it harder to quickly infer intent</li><li>It does nothing to help you organize your templates, leaving consistency up to developer discipline</li></ol><h2 id="conventions-helps-you-to-manage-scope" tabindex="-1">Conventions helps you to manage scope <a class="header-anchor" href="#conventions-helps-you-to-manage-scope" aria-label="Permalink to &quot;Conventions helps you to manage scope&quot;">​</a></h2><p>While <code>include</code> does provide a mechanism for isolating context (<code> with { foo: bar } only</code>) it is opt-in, and by default includes have access to the entire scope of the template that included them.</p><p>Conventions not only enforces <code>only</code> by default, but gives to a set of additional tools to <a href="./03-managing-context.html">manage context</a> in your Patterns to help you reduce boilerplate and eliminate errors.</p><h2 id="conventions-allows-you-to-write-more-compact-and-expressive-code" tabindex="-1">Conventions allows you to write more compact and expressive code <a class="header-anchor" href="#conventions-allows-you-to-write-more-compact-and-expressive-code" aria-label="Permalink to &quot;Conventions allows you to write more compact and expressive code&quot;">​</a></h2><p>Compare native Twig:</p><div class="language-twig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_components/card with { data: blogEntry } only %}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{% include &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_components/card/#{entry.type.handle}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;, &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_components/card/default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;] ignore missing with { data: blogEntry } only  %}</span></span></code></pre></div><p>vs Conventions:</p><div class="language-twig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ component(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;card&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { data: blogEntry }) }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ component([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;card/#{entry.type.handle}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;card/default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], { data: blogEntry }) }}</span></span></code></pre></div><h2 id="conventions-helps-you-to-organize-your-templates" tabindex="-1">Conventions helps you to organize your templates <a class="header-anchor" href="#conventions-helps-you-to-organize-your-templates" aria-label="Permalink to &quot;Conventions helps you to organize your templates&quot;">​</a></h2><p>Declaratively group like kinds of template fragment (&quot;patterns&quot;) with like:</p><p>Config</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;patterns&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;component&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_components&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;partial&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_partials&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>Filesystem</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _components</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> button.twig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> card.twig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag.twig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _partials</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> footer.twig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> header.twig</span></span></code></pre></div><p>Templates</p><div class="language-twig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ partial(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;footer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }}</span></span></code></pre></div><h2 id="minimal-working-example" tabindex="-1">Minimal working example <a class="header-anchor" href="#minimal-working-example" aria-label="Permalink to &quot;Minimal working example&quot;">​</a></h2><h3 id="config" tabindex="-1">Config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;Config&quot;">​</a></h3><p>Given the following minimal config:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/conventions.php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;patterns&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;component&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_components&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;partial&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_partials&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>Conventions will auto-register two new twig functions: <code>component()</code> and <code>partial()</code>. Using the default <a href="./05-concepts.html#resolvers">resolver</a>, the paths passed as the first argument to one of these functions will be resolved within the subdirectory of your projects <code>templates/</code> directory defined by the value side of the definition.</p><h3 id="templating" tabindex="-1">Templating <a class="header-anchor" href="#templating" aria-label="Permalink to &quot;Templating&quot;">​</a></h3><div class="language-twig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ component(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;card/blog&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { data: { entry: entry} }) }}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">{# resolves to a template at \`_components/card/blog.twig\`  #}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">{# or pass an array of paths to provide fallbacks, works just like \`include([..paths]) ignore missing\` #}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ component([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;card/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ~entry.type.handle, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;card/default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) }}</span></span></code></pre></div><p>Already your template code should be looking cleaner and more readable. But wait, there&#39;s more...</p>`,32)]))}const y=i(l,[["render",o]]);export{g as __pageData,y as default};
